/**
 * Generated by Dragonfly SDK.
 */
package btledbartest;


import java.util.Map;

import com.buglabs.bt.ledbar.BTLedBar;
import org.osgi.service.log.LogService;

import org.osgi.framework.BundleActivator;
import org.osgi.framework.BundleContext;
import org.osgi.util.tracker.ServiceTracker;

import com.buglabs.application.ServiceTrackerHelper;


/**
 * BundleActivator for BTLedBarTest.  The OSGi entry point to the application.
 *
 */
public class Activator implements BundleActivator {
	final long PERIOD = 500;
    /**
	 * OSGi services the application depends on.
	 */
	private static final String [] services = {		
		BTLedBar.class.getName(),		
		LogService.class.getName(),
	};	
	private ServiceTracker serviceTracker;
	private LogService ls;
	private BTLedBar btledbar;
	private Object stop;
	private blinker blink;
	
	/*
	 * (non-Javadoc)
	 * @see org.osgi.framework.BundleActivator#start(org.osgi.framework.BundleContext)
	 */
	public class blinker implements Runnable {
		private Thread t;
		public blinker(){
			t = new Thread(this, "blinker");
			t.start();
		}
		public void stop(){
			t.interrupt(); 
		}
		@Override
		public void run() {
			while(true){
				for (int i=0;i<5;i++){
					if (i == 0)
						btledbar.fade(4, PERIOD, 0.0);
					else
						btledbar.fade(i-1, PERIOD, 0.0);
					btledbar.fade(i, PERIOD, 1.0);
					try {
						Thread.sleep(PERIOD+Math.round(PERIOD/10));
					} catch (InterruptedException e) {return;}
				}
				ls.log(ls.LOG_DEBUG, "Raw battery level: "+btledbar.rawBatteryLevel());
			}
		}
	}
	
	public void start(BundleContext context) throws Exception {
		serviceTracker = ServiceTrackerHelper.openServiceTracker(context, services, new ServiceTrackerHelper.ManagedInlineRunnable() {
			
			@Override
			public void run(Map<Object, Object> services) {			
				btledbar = (BTLedBar) services.get(BTLedBar.class.getName());			
				ls = (LogService) services.get(LogService.class.getName());
				ls.log(ls.LOG_INFO, "Connecting to \"RN42\"");
				
				//repeatedly call setName until a device containing the text
				//"FireFly" is found. 
				while(!btledbar.setMac("000666430D08")){
					ls.log(ls.LOG_INFO, "Couldn't find device, retrying");
					try {
						Thread.sleep(1000);
					} catch (InterruptedException e) { return; }
				}
				
				ls.log(ls.LOG_INFO, "Connected, toggling LED");
				blink = new blinker();
			}
			
			@Override
			public void shutdown() {
				blink.stop();
				ls.log(ls.LOG_DEBUG, "nuked thread, setting all off");
				btledbar.setAll(0.0);
				ls.log(ls.LOG_INFO, "Disconnecting...");
				//Disconnect will cease automatically reconnecting to device
				btledbar.disconnect();
			}
		});

	}

    /*
	 * (non-Javadoc)
	 * @see org.osgi.framework.BundleActivator#stop(org.osgi.framework.BundleContext)
	 */
	public void stop(BundleContext context) throws Exception {
	
		//Will cause the ManagedRunnable.shutdown() to be called.
		serviceTracker.close();
	}
	
	
}